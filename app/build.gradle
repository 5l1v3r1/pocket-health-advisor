apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.lun.pocket_health_advisor"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'com.braintreepayments.api:braintree:2.+'
    compile 'com.braintreepayments.api:drop-in:3.+'
    compile 'com.android.volley:volley:1.0.0'
    compile(name:'sinch-android-rtc', version:'+', ext:'aar')
}
repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.3.0'
            }
        }
    }
}

preBuild.doFirst {
    String[] path = project.buildscript.sourceFile.getParent().split("/")
    String taskName = path[path.size()-1]
    if (taskName.contains("-push") && !file("./google-services.json").exists()) {
        outputFcmBuildError()
    }
}

def outputFcmBuildError() {
    System.err.println 'You are building one of Sinch sample projects that uses Firebase Cloud Messaging for delivering push notifications.'
    System.err.println 'Android Studio FCM plugin requires \'google-services.json\' with correspondent \'package_name\' to be in gradle :app folder (e.g. in ./sinch-rtc-sample-push/)'
    System.err.println 'Follow the Firebase Cloud Messaging manual here \'https://firebase.google.com/docs/android/setup\' to get one.'
    System.err.println 'For details about Sinch Managed push notifications look here \'https://www.sinch.com/docs/voice/android/#pushnotifications\'.'
    throw new GradleException('google-services.json NOT FOUND!')
}

apply plugin: 'kotlin-android-extensions'